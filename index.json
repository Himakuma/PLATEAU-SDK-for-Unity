{
  "api/PLATEAU.CityGML.Address.html": {
    "href": "api/PLATEAU.CityGML.Address.html",
    "title": "Class Address | PLATEAU SDK for Unity",
    "keywords": "Class Address 住所情報を保持します。 CityObject が Address を保持します。 Inheritance Object Address Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Address Constructors Address(IntPtr) Declaration public Address(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Country Declaration public string Country { get; } Property Value Type Description String Locality Declaration public string Locality { get; } Property Value Type Description String PostalCode Declaration public string PostalCode { get; } Property Value Type Description String ThoroughFareName Declaration public string ThoroughFareName { get; } Property Value Type Description String ThoroughFareNumber Declaration public string ThoroughFareNumber { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.Appearance.html": {
    "href": "api/PLATEAU.CityGML.Appearance.html",
    "title": "Class Appearance | PLATEAU SDK for Unity",
    "keywords": "Class Appearance Texture , Material の基底クラスです。 Inheritance Object Object Appearance Material Texture Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Appearance : Object Properties IsFront Declaration public bool IsFront { get; } Property Value Type Description Boolean Themes テーマ名を配列で返します。 Declaration public string[] Themes { get; } Property Value Type Description String [] Type Texture なら \"Texture\" という文字列を返します。 Declaration public string Type { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.AppearanceTarget.html": {
    "href": "api/PLATEAU.CityGML.AppearanceTarget.html",
    "title": "Class AppearanceTarget | PLATEAU SDK for Unity",
    "keywords": "Class AppearanceTarget 見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。 テーマ名, TextureTargetDefinition , MaterialTargetDefinition を保持し、それらを紐付けます。 Inheritance Object Object AppearanceTarget Geometry Polygon Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AppearanceTarget : Object Properties TextureTargetDefinitions 保持する TextureTargetDefinition を foreach や LINQ でイテレートするための機能です。 Declaration public IEnumerable<TextureTargetDefinition> TextureTargetDefinitions { get; } Property Value Type Description IEnumerable < TextureTargetDefinition > TextureTargetDefinitionsCount 保持する TextureTargetDefinitions の数を返します。 Declaration public int TextureTargetDefinitionsCount { get; } Property Value Type Description Int32 Methods GetMaterialTargetDefinitionByThemeName(String, Boolean) Declaration public MaterialTargetDefinition GetMaterialTargetDefinitionByThemeName(string themeName, bool front) Parameters Type Name Description String themeName Boolean front Returns Type Description MaterialTargetDefinition GetTextureTargetDefinition(Int32) インデックス指定で TextureTargetDefinition を取得します。 Declaration public TextureTargetDefinition GetTextureTargetDefinition(int index) Parameters Type Name Description Int32 index Returns Type Description TextureTargetDefinition GetTextureTargetDefinition(String, Boolean) テーマ名から TextureTargetDefinition を取得します。 与えられたテーマ名に該当するものがない場合は を投げます。 Declaration public TextureTargetDefinition GetTextureTargetDefinition(string themeName, bool front) Parameters Type Name Description String themeName Boolean front Returns Type Description TextureTargetDefinition MaterialThemeNames(Boolean) Declaration public string[] MaterialThemeNames(bool front) Parameters Type Name Description Boolean front Returns Type Description String [] MaterialThemesCountByFront(Boolean) Declaration public int MaterialThemesCountByFront(bool front) Parameters Type Name Description Boolean front Returns Type Description Int32 TextureThemeNames(Boolean) テクスチャのテーマ名(0個以上)を取得して配列で返します。 Declaration public string[] TextureThemeNames(bool front) Parameters Type Name Description Boolean front Returns Type Description String [] TextureThemesCountOfFront(Boolean) 保持するテクスチャのテーマのうち、 front が与えられたタイプであるものの数を返します。 Declaration public int TextureThemesCountOfFront(bool front) Parameters Type Name Description Boolean front Returns Type Description Int32"
  },
  "api/PLATEAU.CityGML.AppearanceTargetDefinition-1.html": {
    "href": "api/PLATEAU.CityGML.AppearanceTargetDefinition-1.html",
    "title": "Class AppearanceTargetDefinition<T> | PLATEAU SDK for Unity",
    "keywords": "Class AppearanceTargetDefinition<T> TextureTargetDefinition , MaterialTargetDefinition の基底クラスです。 TargetID , Appearance を保持します。 Appearance は TextureTargetDefinition ならば Texture 型、 MaterialTargetDefinition ならば Material 型です。 Inheritance Object Object AppearanceTargetDefinition<T> MaterialTargetDefinition TextureTargetDefinition Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AppearanceTargetDefinition<T> : Object where T : Appearance Type Parameters Name Description T Properties Appearance Declaration public T Appearance { get; } Property Value Type Description T TargetID Declaration public string TargetID { get; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.AttributesMap.html": {
    "href": "api/PLATEAU.CityGML.AttributesMap.html",
    "title": "Class AttributesMap | PLATEAU SDK for Unity",
    "keywords": "Class AttributesMap 属性の辞書です。 を実装します。 string をキーとし、 AttributeValue が値になります。 this[key] で AttributeValue が返ります。 Inheritance Object AttributesMap Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AttributesMap : IReadOnlyDictionary<string, AttributeValue> Properties Count 属性の数を返します。 Declaration public int Count { get; } Property Value Type Description Int32 Item[String] 属性のキーから値を返します。 key が存在しない場合は を投げます。 例外を投げてほしくない場合は代わりに TryGetValue(String, out AttributeValue) メソッドを利用してください。 Declaration public AttributeValue this[string key] { get; } Parameters Type Name Description String key Property Value Type Description AttributeValue Keys 属性のキーをすべて返します。 結果はキャッシュされるので2回目以降は速いです。 Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable < String > Values (key, value) のペアのうち value ( AttributeValue ) をすべて返します。 Declaration public IEnumerable<AttributeValue> Values { get; } Property Value Type Description IEnumerable < AttributeValue > Methods ContainsKey(String) 属性に key が含まれていれば true, key がなければ false を返します。 Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<AttrPair> GetEnumerator() Returns Type Description IEnumerator < AttrPair > ToString() 属性の中身を、見やすくフォーマットした文字列にして返します。 子の属性も再帰的に含みます。 Declaration public override string ToString() Returns Type Description String TryGetValue(String, out AttributeValue) 属性辞書の中に key が存在すればその値を value に代入して true を返します。 key が存在しなければ value に null を代入して false を返します。 Declaration public bool TryGetValue(string key, out AttributeValue value) Parameters Type Name Description String key AttributeValue value Returns Type Description Boolean"
  },
  "api/PLATEAU.CityGML.AttributeType.html": {
    "href": "api/PLATEAU.CityGML.AttributeType.html",
    "title": "Enum AttributeType | PLATEAU SDK for Unity",
    "keywords": "Enum AttributeType 属性の値の想定形式です。 形式が String, Double, Integer, Data, Uri, Measure である場合、内部的にはデータは string です。 AttributeSet である場合、内部的にはデータは AttributesMap への参照です。 Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum AttributeType Fields Name Description AttributeSet Data Double Integer Measure String Uri"
  },
  "api/PLATEAU.CityGML.AttributeValue.html": {
    "href": "api/PLATEAU.CityGML.AttributeValue.html",
    "title": "Class AttributeValue | PLATEAU SDK for Unity",
    "keywords": "Class AttributeValue Plateau のオブジェクトが持つ属性 (key と value のペア) のうち、 value の部分です。 value は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。 value の値がどのような形式であるかを AttributeType 形式で保持し、 Type で取得できます。 Type が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 AsString で取得できます。 AsDouble , AsInt プロパティもありますが、それは単に AsString を数値にパースするものです。 Type が AttributeSet である場合、 この属性の子に属性セットがあることを意味します。 この場合は AsString は意味を成さず、代わりに AsAttrSet で子の属性セットを取得できます。 Inheritance Object AttributeValue Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class AttributeValue Constructors AttributeValue(IntPtr) Declaration public AttributeValue(IntPtr handle) Parameters Type Name Description IntPtr handle Properties AsAttrSet Type が AttributeSet であることを前提に、 子の AttributesMap を返します。 Type がその他である場合は意味を成しません。 Declaration public AttributesMap AsAttrSet { get; } Property Value Type Description AttributesMap AsDouble 属性値を double にパースして返します。 Declaration public double AsDouble { get; } Property Value Type Description Double AsInt 属性値を int にパースして返します。 Declaration public int AsInt { get; } Property Value Type Description Int32 AsString 属性値を string 形式で取得します。 Type が String, Double, Integer, Data, Uri, Measure の場合に有効です。 Type が AttributeSet の場合は意味を成しません。 Declaration public string AsString { get; } Property Value Type Description String Type 属性の値の想定形式です。 AttributeType 型で返します。 Declaration public AttributeType Type { get; } Property Value Type Description AttributeType"
  },
  "api/PLATEAU.CityGML.CityGml.html": {
    "href": "api/PLATEAU.CityGML.CityGml.html",
    "title": "Class CityGml | PLATEAU SDK for Unity",
    "keywords": "Class CityGml Inheritance Object CityGml Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public static class CityGml Methods Load(String, CitygmlParserParams, LogCallbacks, DllLogLevel) DLLの機能によって gmlファイルをパースし、CityModelを生成します。 Declaration public static CityModel Load(string gmlPath, CitygmlParserParams parserParams, LogCallbacks logCallbacks = null, DllLogLevel logLevel = null) Parameters Type Name Description String gmlPath gmlファイルのパスです。 CitygmlParserParams parserParams 変換の設定です。 LogCallbacks logCallbacks ログを受け取るコールバックです。省略または null の場合は C# の標準出力にログを転送します。 DllLogLevel logLevel ログの詳細度です。 Returns Type Description CityModel"
  },
  "api/PLATEAU.CityGML.CityModel.html": {
    "href": "api/PLATEAU.CityGML.CityModel.html",
    "title": "Class CityModel | PLATEAU SDK for Unity",
    "keywords": "Class CityModel GMLファイルをパースして得られる街のモデルです。 0個以上の CityObject を保持します。 Inheritance Object CityModel Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public sealed class CityModel : IDisposable Properties Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr RootCityObjects CityModel のトップレベルにある CityObject の一覧を返します。 Declaration public ReadOnlyCollection<CityObject> RootCityObjects { get; } Property Value Type Description ReadOnlyCollection < CityObject > Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() GetCenterPoint(Int32) cityModel の中心点を返します。 また GMLファイルから cityModel の Envelope を読み取れない場合は、 中心点が分からないので原点座標を返します。 Declaration public PlateauVector3d GetCenterPoint(int coordinateZoneID) Parameters Type Name Description Int32 coordinateZoneID Returns Type Description PlateauVector3d GetCityObjectById(String) idから CityObject を返します。 該当idのものがない場合は を投げます。 Declaration public CityObject GetCityObjectById(string id) Parameters Type Name Description String id Returns Type Description CityObject GetCityObjectsByType(CityObjectType) CityModel の type タイプの全ての CityObject を返します。 Declaration public CityObject[] GetCityObjectsByType(CityObjectType type) Parameters Type Name Description CityObjectType type 取得したい都市オブジェクトのタイプ Returns Type Description CityObject [] type タイプの全ての CityObject"
  },
  "api/PLATEAU.CityGML.CityObject.html": {
    "href": "api/PLATEAU.CityGML.CityObject.html",
    "title": "Class CityObject | PLATEAU SDK for Unity",
    "keywords": "Class CityObject CityGMLにおける都市オブジェクトです。 CityModel または 親 CityObject が CityObject を保持します。 この CityObject は CityObjectType , Address , 子 CityObject , Geometry を保持します。 Inheritance Object Object FeatureObject CityObject Inherited Members FeatureObject.Envelope FeatureObject.SetEnvelope(Double, Double, Double, Double, Double, Double) Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class CityObject : FeatureObject Properties Address Declaration public Address Address { get; } Property Value Type Description Address ChildCityObjectCount Declaration public int ChildCityObjectCount { get; } Property Value Type Description Int32 ChildCityObjects 子 CityObject をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<CityObject> ChildCityObjects { get; } Property Value Type Description IEnumerable < CityObject > CityObjectDescendantsDFS 子孫の CityObject をすべて再帰的にイテレートします。自分自身を含みます。 イテレートの順番は DFS（深さ優先探索）です。 Declaration public IEnumerable<CityObject> CityObjectDescendantsDFS { get; } Property Value Type Description IEnumerable < CityObject > Geometries 各 Geometry を foreach で回したい時に利用できます。 Declaration public IEnumerable<Geometry> Geometries { get; } Property Value Type Description IEnumerable < Geometry > GeometryCount ジオメトリの数を返します。 Declaration public int GeometryCount { get; } Property Value Type Description Int32 ImplicitGeometryCount Declaration public int ImplicitGeometryCount { get; } Property Value Type Description Int32 Type Declaration public CityObjectType Type { get; } Property Value Type Description CityObjectType Methods GetChildCityObject(Int32) Declaration public CityObject GetChildCityObject(int index) Parameters Type Name Description Int32 index Returns Type Description CityObject GetGeometry(Int32) Declaration public Geometry GetGeometry(int index) Parameters Type Name Description Int32 index Returns Type Description Geometry"
  },
  "api/PLATEAU.CityGML.CityObjectType.html": {
    "href": "api/PLATEAU.CityGML.CityObjectType.html",
    "title": "Enum CityObjectType | PLATEAU SDK for Unity",
    "keywords": "Enum CityObjectType Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum CityObjectType : ulong Fields Name Description COT_All COT_BreaklineRelief COT_Bridge COT_BridgeConstructionElement COT_BridgeInstallation COT_BridgePart COT_Building COT_BuildingFurniture COT_BuildingInstallation COT_BuildingPart COT_CeilingSurface COT_CityFurniture COT_CityObjectGroup COT_ClosureSurface COT_Door COT_FloorSurface COT_GenericCityObject COT_GroundSurface COT_IntBuildingInstallation COT_InteriorWallSurface COT_LandUse COT_MassPointRelief COT_OuterCeilingSurface COT_OuterFloorSurface COT_PlantCover COT_Railway COT_RasterRelief COT_ReliefComponent COT_ReliefFeature COT_Road COT_RoofSurface COT_Room COT_SolitaryVegetationObject COT_Square COT_TINRelief COT_Track COT_TransportationObject COT_Tunnel COT_WallSurface COT_WaterBody COT_Window"
  },
  "api/PLATEAU.CityGML.FeatureObject.html": {
    "href": "api/PLATEAU.CityGML.FeatureObject.html",
    "title": "Class FeatureObject | PLATEAU SDK for Unity",
    "keywords": "Class FeatureObject CityGMLにおける全ての地物オブジェクトのベースクラスです。 Envelope (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。 Inheritance Object Object FeatureObject CityObject Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class FeatureObject : Object Properties Envelope 建築物の範囲を double[6] で返します。 Declaration public double[] Envelope { get; } Property Value Type Description Double [] 戻り値 double[6] の配列の中身は座標 { lower_x, lower_y, lower_z, upper_x, upper_y, upper_z } です。 Methods SetEnvelope(Double, Double, Double, Double, Double, Double) 建物の範囲を設定します。 Declaration public void SetEnvelope(double lowerX, double lowerY, double lowerZ, double upperX, double upperY, double upperZ) Parameters Type Name Description Double lowerX Double lowerY Double lowerZ Double upperX Double upperY Double upperZ"
  },
  "api/PLATEAU.CityGML.Geometry.html": {
    "href": "api/PLATEAU.CityGML.Geometry.html",
    "title": "Class Geometry | PLATEAU SDK for Unity",
    "keywords": "Class Geometry 建築物の形状と見た目の情報を保持します。 CityObject が Geometry を保持します。 Geometry は Polygon , 子 Geometry を保持します。 Inheritance Object Object AppearanceTarget Geometry Inherited Members AppearanceTarget.TextureTargetDefinitionsCount AppearanceTarget.GetTextureTargetDefinition(Int32) AppearanceTarget.TextureTargetDefinitions AppearanceTarget.GetTextureTargetDefinition(String, Boolean) AppearanceTarget.TextureThemesCountOfFront(Boolean) AppearanceTarget.TextureThemeNames(Boolean) AppearanceTarget.MaterialThemesCountByFront(Boolean) AppearanceTarget.MaterialThemeNames(Boolean) AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean) Object.Handle Object.ID Object.AttributesMap Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Geometry : AppearanceTarget Constructors Geometry(IntPtr) Declaration public Geometry(IntPtr handle) Parameters Type Name Description IntPtr handle Properties ChildGeometries 子の Geometry をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<Geometry> ChildGeometries { get; } Property Value Type Description IEnumerable < Geometry > ChildGeometryCount 子の Geometry の数を返します。 Declaration public int ChildGeometryCount { get; } Property Value Type Description Int32 GeometryDescendantsDFS 子孫の Geometry を再帰ですべてイテレートします。自分自身を含みます。 イテレートの順番は DFS(深さ優先探索)です。 Declaration public IEnumerable<Geometry> GeometryDescendantsDFS { get; } Property Value Type Description IEnumerable < Geometry > LineStringCount LineString の数を返します。 TODO LineString の取得は未実装です。 GMLファイルが LineString を含むケースが今のところ見当たらないため Declaration public int LineStringCount { get; } Property Value Type Description Int32 LOD LOD (Level Of Detail) を取得します。 LOD は 0 がもっとも簡略化された形状であり、数字が上がるほど形状が詳細であることを意味します。 Declaration public int LOD { get; } Property Value Type Description Int32 PolygonCount Polygon の数を返します。 Declaration public int PolygonCount { get; } Property Value Type Description Int32 Polygons Polygon をforeachやLinqで回したい時に利用できます。 Declaration public IEnumerable<Polygon> Polygons { get; } Property Value Type Description IEnumerable < Polygon > SRSName SRSName を取得します。 SRSNameは典型的には次のようなURL形式の文字列になるはずです。 例: \" http://www.opengis.net/def/crs/EPSG/0/6697&quot ; Declaration public string SRSName { get; } Property Value Type Description String Type Declaration public GeometryType Type { get; } Property Value Type Description GeometryType Methods GetChildGeometry(Int32) インデックス指定で子の Geometry を1つ返します。 Declaration public Geometry GetChildGeometry(int index) Parameters Type Name Description Int32 index Returns Type Description Geometry GetPolygon(Int32) インデックス指定で Polygon を1つ返します。 Declaration public Polygon GetPolygon(int index) Parameters Type Name Description Int32 index Returns Type Description Polygon ToString() デバッグ用に自身に関する情報を文字列で返します。 Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/PLATEAU.CityGML.GeometryType.html": {
    "href": "api/PLATEAU.CityGML.GeometryType.html",
    "title": "Enum GeometryType | PLATEAU SDK for Unity",
    "keywords": "Enum GeometryType Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum GeometryType : ulong Fields Name Description GT_Ceiling GT_Closure GT_Floor GT_Ground GT_InteriorWall GT_OuterCeiling GT_OuterFloor GT_Roof GT_Tin GT_Unknown GT_Wall"
  },
  "api/PLATEAU.CityGML.html": {
    "href": "api/PLATEAU.CityGML.html",
    "title": "Namespace PLATEAU.CityGML | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityGML Classes Address 住所情報を保持します。 CityObject が Address を保持します。 Appearance Texture , Material の基底クラスです。 AppearanceTarget 見た目に関する情報のターゲットとなる CityGMLオブジェクトの基底クラスです。 テーマ名, TextureTargetDefinition , MaterialTargetDefinition を保持し、それらを紐付けます。 AppearanceTargetDefinition<T> TextureTargetDefinition , MaterialTargetDefinition の基底クラスです。 TargetID , Appearance を保持します。 Appearance は TextureTargetDefinition ならば Texture 型、 MaterialTargetDefinition ならば Material 型です。 AttributesMap 属性の辞書です。 を実装します。 string をキーとし、 AttributeValue が値になります。 this[key] で AttributeValue が返ります。 AttributeValue Plateau のオブジェクトが持つ属性 (key と value のペア) のうち、 value の部分です。 value は、内部的には string または 子の属性セットへの参照 のどちらかのデータを保持します。 value の値がどのような形式であるかを AttributeType 形式で保持し、 Type で取得できます。 Type が String, Double, Integer, Data, Uri, Measure の場合、内部的にはデータは単に string であり、 AsString で取得できます。 AsDouble , AsInt プロパティもありますが、それは単に AsString を数値にパースするものです。 Type が AttributeSet である場合、 この属性の子に属性セットがあることを意味します。 この場合は AsString は意味を成さず、代わりに AsAttrSet で子の属性セットを取得できます。 CityGml CityModel GMLファイルをパースして得られる街のモデルです。 0個以上の CityObject を保持します。 CityObject CityGMLにおける都市オブジェクトです。 CityModel または 親 CityObject が CityObject を保持します。 この CityObject は CityObjectType , Address , 子 CityObject , Geometry を保持します。 FeatureObject CityGMLにおける全ての地物オブジェクトのベースクラスです。 Envelope (オブジェクトの存在範囲を2点の座標で示したもの)を持ちます。 Geometry 建築物の形状と見た目の情報を保持します。 CityObject が Geometry を保持します。 Geometry は Polygon , 子 Geometry を保持します。 LinearRing 多角形による形状表現です。 頂点座標のリストを保持します。 Polygon が LinearRing を保持します。（ただし条件付きで一部のみです。） Material 未実装です。 マテリアルを含むGMLの例が見当たらないため MaterialTargetDefinition 未実装です。 マテリアルを含むGMLの例が見当たらないため Object CityGMLにおける全てのオブジェクトのベースクラスです。 ユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて AttributesMap に格納されています。 Polygon 建築物の形状におけるポリゴンです。 Vertices , Indices を保持します。 ただし、GMLファイルのパース時に を false に設定した時に限り、 Vertices, Indices の代わりに ExteriorRing , InteriorRings を保持することがあります。 Vertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。 Polygon は Geometry によって保持されます。 Texture テクスチャ情報です。 Url と TextureWrapMode を保持します。 TextureTargetDefinition によって保持されます。 TextureCoordinates テクスチャのマッピングに関する情報です。 テクスチャ座標と LinearRing の頂点を紐付けます。 TextureTargetDefinition テクスチャとテクスチャマッピングを紐付けます。 Appearance でテクスチャ情報を取得できます。 GetCoordinate(Int32) (i) で i番目のテクスチャマッピング ( TextureCoordinates ) を取得できます。 AppearanceTarget によって保持されます。 Enums AttributeType 属性の値の想定形式です。 形式が String, Double, Integer, Data, Uri, Measure である場合、内部的にはデータは string です。 AttributeSet である場合、内部的にはデータは AttributesMap への参照です。 CityObjectType GeometryType TextureWrapMode"
  },
  "api/PLATEAU.CityGML.LinearRing.html": {
    "href": "api/PLATEAU.CityGML.LinearRing.html",
    "title": "Class LinearRing | PLATEAU SDK for Unity",
    "keywords": "Class LinearRing 多角形による形状表現です。 頂点座標のリストを保持します。 Polygon が LinearRing を保持します。（ただし条件付きで一部のみです。） Inheritance Object Object LinearRing Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class LinearRing : Object Properties VertexCount 頂点数を取得します。 注意: GMLファイルのパース時の設定が tessellate = false のときに限り 意味のある値を返します。 tessellate = true でパースした場合、この値は 0 になります。 Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods GetVertex(Int32) index 番目の頂点座標を取得します。 Declaration public PlateauVector3d GetVertex(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.CityGML.Material.html": {
    "href": "api/PLATEAU.CityGML.Material.html",
    "title": "Class Material | PLATEAU SDK for Unity",
    "keywords": "Class Material 未実装です。 マテリアルを含むGMLの例が見当たらないため Inheritance Object Object Appearance Material Inherited Members Appearance.Type Appearance.IsFront Appearance.Themes Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Material : Appearance"
  },
  "api/PLATEAU.CityGML.MaterialTargetDefinition.html": {
    "href": "api/PLATEAU.CityGML.MaterialTargetDefinition.html",
    "title": "Class MaterialTargetDefinition | PLATEAU SDK for Unity",
    "keywords": "Class MaterialTargetDefinition 未実装です。 マテリアルを含むGMLの例が見当たらないため Inheritance Object Object AppearanceTargetDefinition < Material > MaterialTargetDefinition Inherited Members AppearanceTargetDefinition<Material>.Appearance AppearanceTargetDefinition<Material>.TargetID Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class MaterialTargetDefinition : AppearanceTargetDefinition<Material>"
  },
  "api/PLATEAU.CityGML.Object.html": {
    "href": "api/PLATEAU.CityGML.Object.html",
    "title": "Class Object | PLATEAU SDK for Unity",
    "keywords": "Class Object CityGMLにおける全てのオブジェクトのベースクラスです。 ユニークIDと0個以上の属性ペアを持ち、属性ペアはすべて AttributesMap に格納されています。 Inheritance Object Object Appearance AppearanceTarget AppearanceTargetDefinition<T> FeatureObject LinearRing TextureCoordinates Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Object Properties AttributesMap 属性の辞書を取得します。 Declaration public virtual AttributesMap AttributesMap { get; } Property Value Type Description AttributesMap AttributesMap 型で返します。 Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr ID オブジェクトのユニークIDを取得します。 Declaration public string ID { get; protected set; } Property Value Type Description String"
  },
  "api/PLATEAU.CityGML.Polygon.html": {
    "href": "api/PLATEAU.CityGML.Polygon.html",
    "title": "Class Polygon | PLATEAU SDK for Unity",
    "keywords": "Class Polygon 建築物の形状におけるポリゴンです。 Vertices , Indices を保持します。 ただし、GMLファイルのパース時に を false に設定した時に限り、 Vertices, Indices の代わりに ExteriorRing , InteriorRings を保持することがあります。 Vertex と Ring を両方保持する場合もあれば、片方だけの場合もあります。 Polygon は Geometry によって保持されます。 Inheritance Object Object AppearanceTarget Polygon Inherited Members AppearanceTarget.TextureTargetDefinitionsCount AppearanceTarget.GetTextureTargetDefinition(Int32) AppearanceTarget.TextureTargetDefinitions AppearanceTarget.GetTextureTargetDefinition(String, Boolean) AppearanceTarget.TextureThemesCountOfFront(Boolean) AppearanceTarget.TextureThemeNames(Boolean) AppearanceTarget.MaterialThemesCountByFront(Boolean) AppearanceTarget.MaterialThemeNames(Boolean) AppearanceTarget.GetMaterialTargetDefinitionByThemeName(String, Boolean) Object.Handle Object.ID Object.AttributesMap Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Polygon : AppearanceTarget Properties DoHaveRings 多角形の形状情報としての LinearRing (Exterior または Interior)を持っているか Declaration public bool DoHaveRings { get; } Property Value Type Description Boolean DoHaveVertices ポリゴンとしての頂点を持っているか Declaration public bool DoHaveVertices { get; } Property Value Type Description Boolean ExteriorRing 建物の外周の形状です。 GMLファイルのパース時の設定で が true の場合、この情報は保持されません。 false の場合、 ExteriorRing , InteriorRings が保持される場合があります。 Declaration public LinearRing ExteriorRing { get; } Property Value Type Description LinearRing Indices Declaration public IEnumerable<int> Indices { get; } Property Value Type Description IEnumerable < Int32 > IndicesCount Declaration public int IndicesCount { get; } Property Value Type Description Int32 InteriorRingCount 建物の形状の多角形表現のうち、内側にある多角形の数です。 Declaration public int InteriorRingCount { get; } Property Value Type Description Int32 InteriorRings InteriorRing を foreach や Linq で回したい時に利用できます。 Declaration public IEnumerable<LinearRing> InteriorRings { get; } Property Value Type Description IEnumerable < LinearRing > VertexCount 頂点数を返します。 Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods GetIndexOfIndices(Int32) Declaration public int GetIndexOfIndices(int indexOfIndicesList) Parameters Type Name Description Int32 indexOfIndicesList Returns Type Description Int32 GetInteriorRing(Int32) 建物の形状の多角形表現のうち、内側にある多角形の1つをインデックス指定で返します。 Declaration public LinearRing GetInteriorRing(int index) Parameters Type Name Description Int32 index Returns Type Description LinearRing GetVertex(Int32) 頂点番号を受け取り、その頂点の座標を返します。 Declaration public PlateauVector3d GetVertex(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/PLATEAU.CityGML.Texture.html": {
    "href": "api/PLATEAU.CityGML.Texture.html",
    "title": "Class Texture | PLATEAU SDK for Unity",
    "keywords": "Class Texture テクスチャ情報です。 Url と TextureWrapMode を保持します。 TextureTargetDefinition によって保持されます。 Inheritance Object Object Appearance Texture Inherited Members Appearance.Type Appearance.IsFront Appearance.Themes Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class Texture : Appearance Properties Url テクスチャのURLを返します。 Declaration public string Url { get; } Property Value Type Description String WrapMode Declaration public TextureWrapMode WrapMode { get; } Property Value Type Description TextureWrapMode"
  },
  "api/PLATEAU.CityGML.TextureCoordinates.html": {
    "href": "api/PLATEAU.CityGML.TextureCoordinates.html",
    "title": "Class TextureCoordinates | PLATEAU SDK for Unity",
    "keywords": "Class TextureCoordinates テクスチャのマッピングに関する情報です。 テクスチャ座標と LinearRing の頂点を紐付けます。 Inheritance Object Object TextureCoordinates Inherited Members Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class TextureCoordinates : Object Properties TargetLinearRingId このテクスチャマッピングの対象となる LinearRing のIDを返します。 Declaration public string TargetLinearRingId { get; } Property Value Type Description String Vec2CoordsCount 保持するテクスチャ座標の数です。 LinearRing の頂点とテクスチャ座標が1対1で対応するので、 この値は LinearRing の頂点数と同じになります。 Declaration public int Vec2CoordsCount { get; } Property Value Type Description Int32 Methods GetVec2Coord(Int32) LinearRing の index 番目の頂点に対応する テクスチャ座標を返します。 Declaration public PlateauVector2f GetVec2Coord(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector2f IsRingTarget(LinearRing) 引数で与えられた LinearRing が このテクスチャマッピングの対象かどうか判定します。 Declaration public bool IsRingTarget(LinearRing ring) Parameters Type Name Description LinearRing ring Returns Type Description Boolean"
  },
  "api/PLATEAU.CityGML.TextureTargetDefinition.html": {
    "href": "api/PLATEAU.CityGML.TextureTargetDefinition.html",
    "title": "Class TextureTargetDefinition | PLATEAU SDK for Unity",
    "keywords": "Class TextureTargetDefinition テクスチャとテクスチャマッピングを紐付けます。 Appearance でテクスチャ情報を取得できます。 GetCoordinate(Int32) (i) で i番目のテクスチャマッピング ( TextureCoordinates ) を取得できます。 AppearanceTarget によって保持されます。 Inheritance Object Object AppearanceTargetDefinition < Texture > TextureTargetDefinition Inherited Members AppearanceTargetDefinition<Texture>.Appearance AppearanceTargetDefinition<Texture>.TargetID Object.Handle Object.ID Object.AttributesMap Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public class TextureTargetDefinition : AppearanceTargetDefinition<Texture> Constructors TextureTargetDefinition(IntPtr) Declaration public TextureTargetDefinition(IntPtr handle) Parameters Type Name Description IntPtr handle Properties TexCoordinatesCount 保持するテクスチャマッピングの数です。 Declaration public int TexCoordinatesCount { get; } Property Value Type Description Int32 Methods GetCoordinate(Int32) index 番目のテクスチャマッピングを取得します。 Declaration public TextureCoordinates GetCoordinate(int index) Parameters Type Name Description Int32 index Returns Type Description TextureCoordinates"
  },
  "api/PLATEAU.CityGML.TextureWrapMode.html": {
    "href": "api/PLATEAU.CityGML.TextureWrapMode.html",
    "title": "Enum TextureWrapMode | PLATEAU SDK for Unity",
    "keywords": "Enum TextureWrapMode Namespace : PLATEAU.CityGML Assembly : cs.temp.dll.dll Syntax public enum TextureWrapMode Fields Name Description WM_Border WM_Clamp WM_Mirror WM_None WM_Wrap"
  },
  "api/PLATEAU.CityInfo.html": {
    "href": "api/PLATEAU.CityInfo.html",
    "title": "Namespace PLATEAU.CityInfo | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.CityInfo Classes PLATEAUCityGmlProxy GMLファイルから都市情報を読み込みます。"
  },
  "api/PLATEAU.CityInfo.PLATEAUCityGmlProxy.html": {
    "href": "api/PLATEAU.CityInfo.PLATEAUCityGmlProxy.html",
    "title": "Class PLATEAUCityGmlProxy | PLATEAU SDK for Unity",
    "keywords": "Class PLATEAUCityGmlProxy GMLファイルから都市情報を読み込みます。 Inheritance Object PLATEAUCityGmlProxy Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.CityInfo Assembly : cs.temp.dll.dll Syntax public class PLATEAUCityGmlProxy Methods LoadAsync(GameObject) Declaration public async Task<CityModel> LoadAsync(GameObject go) Parameters Type Name Description GameObject go Returns Type Description Task < CityModel > LoadAsync(String) 非同期で GMLパスから を取得します。 Declaration public async Task<CityModel> LoadAsync(string gmlRelativePath) Parameters Type Name Description String gmlRelativePath からの相対パスでGMLファイルを指定します。 Returns Type Description Task < CityModel > を返します。 キャッシュにあればそれを返し、なければGMLファイルをパースして結果を返します。 パースに失敗した場合 null を返します。 パースの高速化のため、返す CityModel には属性情報が含まれますが、3Dモデル情報は含まれません。"
  },
  "api/PLATEAU.Geometries.GeoReference.html": {
    "href": "api/PLATEAU.Geometries.GeoReference.html",
    "title": "Class GeoReference | PLATEAU SDK for Unity",
    "keywords": "Class GeoReference 極座標と平面直角座標を変換します。 また座標変換の基準を保持します。 Inheritance Object GeoReference Namespace : PLATEAU.Geometries Assembly : cs.temp.dll.dll Syntax public class GeoReference : IDisposable Constructors GeoReference(PlateauVector3d, Single, CoordinateSystem, Int32) Declaration public GeoReference(PlateauVector3d referencePoint, float unitScale, CoordinateSystem coordinateSystem, int zoneID) Parameters Type Name Description PlateauVector3d referencePoint 平面直角座標に変換したあと、この座標が原点となるように並行移動します。 Single unitScale 平面直角座標に変換したあと、拡大縮小します。 CoordinateSystem coordinateSystem 平面直角座標のX,Y,Z軸の向きを決めます。 Int32 zoneID 国土交通省告示第九号に基づく平面直角座標系の原点の番号です。 関東地方では 9 を選択すると歪みが少なくなりますが、 この値を間違えても、ぱっと見ですぐ分かるような歪みにはなりません。 詳しくはこちらを参照してください : https://www.gsi.go.jp/sokuchikijun/jpc.html Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() Project(GeoCoordinate) Declaration public PlateauVector3d Project(GeoCoordinate geoCoordinate) Parameters Type Name Description GeoCoordinate geoCoordinate Returns Type Description PlateauVector3d Unproject(PlateauVector3d) Declaration public GeoCoordinate Unproject(PlateauVector3d point) Parameters Type Name Description PlateauVector3d point Returns Type Description GeoCoordinate"
  },
  "api/PLATEAU.Geometries.html": {
    "href": "api/PLATEAU.Geometries.html",
    "title": "Namespace PLATEAU.Geometries | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Geometries Classes GeoReference 極座標と平面直角座標を変換します。 また座標変換の基準を保持します。"
  },
  "api/PLATEAU.Interop.APIResult.html": {
    "href": "api/PLATEAU.Interop.APIResult.html",
    "title": "Enum APIResult | PLATEAU SDK for Unity",
    "keywords": "Enum APIResult Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public enum APIResult Fields Name Description ErrorFileSystem ErrorIndexOutOfBounds ErrorLoadingCityGml ErrorUnknown ErrorValueNotFound Success"
  },
  "api/PLATEAU.Interop.CitygmlParserParams.html": {
    "href": "api/PLATEAU.Interop.CitygmlParserParams.html",
    "title": "Struct CitygmlParserParams | PLATEAU SDK for Unity",
    "keywords": "Struct CitygmlParserParams GMLファイルのパ�?ス時�?設定です�?? Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public struct CitygmlParserParams Constructors CitygmlParserParams(Boolean, Boolean, Boolean) Declaration public CitygmlParserParams(bool optimize, bool tessellate, bool ignoreGeometries) Parameters Type Name Description Boolean optimize Boolean tessellate Boolean ignoreGeometries Fields IgnoreGeometries Declaration public bool IgnoreGeometries Field Value Type Description Boolean Optimize Declaration public bool Optimize Field Value Type Description Boolean Tessellate Tessellate �? false に設定すると�? が�?�点を保持する代わりに を保持することがあります�?? Declaration public bool Tessellate Field Value Type Description Boolean"
  },
  "api/PLATEAU.Interop.DllLogger.html": {
    "href": "api/PLATEAU.Interop.DllLogger.html",
    "title": "Class DllLogger | PLATEAU SDK for Unity",
    "keywords": "Class DllLogger DLL側のログをC#側にコールバックで転送するクラスです。 C#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。 Inheritance Object DllLogger Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public class DllLogger : IDisposable Constructors DllLogger() Declaration public DllLogger() DllLogger(IntPtr) Declaration public DllLogger(IntPtr handle) Parameters Type Name Description IntPtr handle Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() SetCallbacksToStdOut() DLLから受け取ったログメッセージを C#での標準出力に転送するよう設定します。 Declaration public void SetCallbacksToStdOut() SetLogCallbacks(LogCallbacks) DLL内でのログをコールバックによって受け取ることができるようにします。 Declaration public void SetLogCallbacks(LogCallbacks callbacks) Parameters Type Name Description LogCallbacks callbacks SetLogLevel(DllLogLevel) 指定したログレベル未満のログは無視するようにします。 Declaration public void SetLogLevel(DllLogLevel logLevel) Parameters Type Name Description DllLogLevel logLevel"
  },
  "api/PLATEAU.Interop.DllLogLevel.html": {
    "href": "api/PLATEAU.Interop.DllLogLevel.html",
    "title": "Enum DllLogLevel | PLATEAU SDK for Unity",
    "keywords": "Enum DllLogLevel Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public enum DllLogLevel Fields Name Description Debug Error Info Trace Warning"
  },
  "api/PLATEAU.Interop.Extent.html": {
    "href": "api/PLATEAU.Interop.Extent.html",
    "title": "Struct Extent | PLATEAU SDK for Unity",
    "keywords": "Struct Extent �?小�?�?大からなる�?��です�?? Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public struct Extent Constructors Extent(GeoCoordinate, GeoCoordinate) Declaration public Extent(GeoCoordinate min, GeoCoordinate max) Parameters Type Name Description GeoCoordinate min GeoCoordinate max Fields Max Declaration public GeoCoordinate Max Field Value Type Description GeoCoordinate Min Declaration public GeoCoordinate Min Field Value Type Description GeoCoordinate"
  },
  "api/PLATEAU.Interop.GeoCoordinate.html": {
    "href": "api/PLATEAU.Interop.GeoCoordinate.html",
    "title": "Struct GeoCoordinate | PLATEAU SDK for Unity",
    "keywords": "Struct GeoCoordinate Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public struct GeoCoordinate Constructors GeoCoordinate(Double, Double, Double) Declaration public GeoCoordinate(double lat, double lon, double height) Parameters Type Name Description Double lat Double lon Double height Fields Height Declaration public double Height Field Value Type Description Double Latitude Declaration public double Latitude Field Value Type Description Double Longitude Declaration public double Longitude Field Value Type Description Double"
  },
  "api/PLATEAU.Interop.html": {
    "href": "api/PLATEAU.Interop.html",
    "title": "Namespace PLATEAU.Interop | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Interop Classes DllLogger DLL側のログをC#側にコールバックで転送するクラスです。 C#側でログを表示するためのコールバックメソッドとログ詳細度を指定できます。 LogCallbacks DLL側のログをC#側でコールバックで受け取ることができますが、 その Error, Warn, Info の3つのコールバックをまとめたクラスです。 詳しくは DllLogger をご覧ください。 PInvokeDisposable 廃棄時に Native側で delete する必要があるものの基底クラスです。 Native側で delete する処理として、 DisposeNative() がサブクラスで実装されていることを前提とします。 廃棄タイミングは GC処理時 または using(var a){} ブロックを抜ける時 または Dispose() を呼んだときです。 Structs CitygmlParserParams GMLファイルのパ�?ス時�?設定です�?? Extent �?小�?�?大からなる�?��です�?? GeoCoordinate MeshExtractOptions GMLファイルから3Dメ�?��ュを取り�?すため�?設定です�?? PlateauVector2f PlateauVector3d Enums APIResult DllLogLevel MeshFileFormat Delegates LogCallbackFuncType"
  },
  "api/PLATEAU.Interop.LogCallbackFuncType.html": {
    "href": "api/PLATEAU.Interop.LogCallbackFuncType.html",
    "title": "Delegate LogCallbackFuncType | PLATEAU SDK for Unity",
    "keywords": "Delegate LogCallbackFuncType Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public delegate void LogCallbackFuncType(IntPtr textPtr); Parameters Type Name Description IntPtr textPtr"
  },
  "api/PLATEAU.Interop.LogCallbacks.html": {
    "href": "api/PLATEAU.Interop.LogCallbacks.html",
    "title": "Class LogCallbacks | PLATEAU SDK for Unity",
    "keywords": "Class LogCallbacks DLL側のログをC#側でコールバックで受け取ることができますが、 その Error, Warn, Info の3つのコールバックをまとめたクラスです。 詳しくは DllLogger をご覧ください。 Inheritance Object LogCallbacks Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public class LogCallbacks Constructors LogCallbacks(LogCallbackFuncType, LogCallbackFuncType, LogCallbackFuncType) Declaration public LogCallbacks(LogCallbackFuncType logError, LogCallbackFuncType logWarn, LogCallbackFuncType logInfo) Parameters Type Name Description LogCallbackFuncType logError LogCallbackFuncType logWarn LogCallbackFuncType logInfo Fields StdErrFunc Declaration public static readonly LogCallbackFuncType StdErrFunc Field Value Type Description LogCallbackFuncType StdOut DLLのログをC#の標準出力に転送するよう設定されたコールバックメソッドです。 Declaration public static readonly LogCallbacks StdOut Field Value Type Description LogCallbacks StdOutFunc Declaration public static readonly LogCallbackFuncType StdOutFunc Field Value Type Description LogCallbackFuncType Properties LogError Declaration public LogCallbackFuncType LogError { get; set; } Property Value Type Description LogCallbackFuncType LogErrorFuncPtr Declaration public IntPtr LogErrorFuncPtr { get; } Property Value Type Description IntPtr LogInfo Declaration public LogCallbackFuncType LogInfo { get; set; } Property Value Type Description LogCallbackFuncType LogInfoFuncPtr Declaration public IntPtr LogInfoFuncPtr { get; } Property Value Type Description IntPtr LogWarn Declaration public LogCallbackFuncType LogWarn { get; set; } Property Value Type Description LogCallbackFuncType LogWarnFuncPtr Declaration public IntPtr LogWarnFuncPtr { get; } Property Value Type Description IntPtr"
  },
  "api/PLATEAU.Interop.MeshExtractOptions.html": {
    "href": "api/PLATEAU.Interop.MeshExtractOptions.html",
    "title": "Struct MeshExtractOptions | PLATEAU SDK for Unity",
    "keywords": "Struct MeshExtractOptions GMLファイルから3Dメ�?��ュを取り�?すため�?設定です�?? Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public struct MeshExtractOptions Fields CoordinateZoneID 国土交通省が規定する�?�日本の平面直角座標系の基準点の番号です�?? 詳しくは次の国土地�?��のサイトをご覧ください�? �? https://www.gsi.go.jp/sokuchikijun/jpc.html Declaration public int CoordinateZoneID Field Value Type Description Int32 ExcludeCityObjectOutsideExtent �?��外�?3Dモ�?��を�?力から除外するため�?�?2つの方法�?�?��1つを有効にするかど�?���? bool で�?��します�?? そ�?方法とは�??市オブジェクト�?�?初�?頂点の位置が�?��外�?とき�?�そのオブジェクト�?すべて�?��外とみなして出力から除外します�?? これはビル1棟程度の大きさのオブジェクトでは有効ですが�? 10km�?10kmの地形のような巨大なオブジェクトでは、実際には�?���?��のに�?初�?頂点が遠�?��めに除外されると�?��ことがおきます�?? したがって、この値は建物では true, 地形では false となるべきです�?? Declaration public bool ExcludeCityObjectOutsideExtent Field Value Type Description Boolean ExcludeTrianglesOutsideExtent �?��外�?3Dモ�?��を�?力から除外するため�?�?2つの方法�?�?��1つを有効にするかど�?���? bool で�?��します�?? そ�?方法とは、メ�?��ュ操作によって、�?��外に存在するポリゴンを除外します�?? こ�?方法であれば 10km�?10km の地形など巨大なオブジェクトにも対応できます�?? Declaration public bool ExcludeTrianglesOutsideExtent Field Value Type Description Boolean ExportAppearance �?��スチャを含めるかど�?��です�?? Declaration public bool ExportAppearance Field Value Type Description Boolean Extent 対象�?��を緯度・経度・高さで�?��します�?? Declaration public Extent Extent Field Value Type Description Extent GridCountOfSide メ�?��ュ結合の粒度が�?��?市モ�?��単位�?��?時�?み有効で、この設定では都市を格子状のグリ�?��に�?��するので、その1辺あたり�?�?��数(縦の数 = 横の数)で�? Declaration public int GridCountOfSide Field Value Type Description Int32 MaxLOD 出力するLODの�?��上限です�?? Declaration public uint MaxLOD Field Value Type Description UInt32 MeshAxes 座標軸の向きです�?? Declaration public CoordinateSystem MeshAxes Field Value Type Description CoordinateSystem MeshGranularity メ�?��ュ結合の粒度です�?? Declaration public MeshGranularity MeshGranularity Field Value Type Description MeshGranularity MinLOD 出力するLODの�?��の下限です�?? Declaration public uint MinLOD Field Value Type Description UInt32 ReferencePoint 直交座標系における座標で�?3Dモ�?��の原点をどこに設定するかです�?? Declaration public PlateauVector3d ReferencePoint Field Value Type Description PlateauVector3d UnitScale 大きさ補正です�?? Declaration public float UnitScale Field Value Type Description Single Methods DefaultValue() �?��ォルト�?�の設定を返します�?? Declaration public static MeshExtractOptions DefaultValue() Returns Type Description MeshExtractOptions Validate(out String) 設定�?値が正常な�? true, 異常な点があれ�? false を返します�?? 異常な点があれ�?、それを説明する文字�?が�?ります�?�正常なら空�?���?になります�?? Declaration public bool Validate(out string failureMessage) Parameters Type Name Description String failureMessage Returns Type Description Boolean"
  },
  "api/PLATEAU.Interop.MeshFileFormat.html": {
    "href": "api/PLATEAU.Interop.MeshFileFormat.html",
    "title": "Enum MeshFileFormat | PLATEAU SDK for Unity",
    "keywords": "Enum MeshFileFormat Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public enum MeshFileFormat Fields Name Description GLTF OBJ"
  },
  "api/PLATEAU.Interop.PInvokeDisposable.html": {
    "href": "api/PLATEAU.Interop.PInvokeDisposable.html",
    "title": "Class PInvokeDisposable | PLATEAU SDK for Unity",
    "keywords": "Class PInvokeDisposable 廃棄時に Native側で delete する必要があるものの基底クラスです。 Native側で delete する処理として、 DisposeNative() がサブクラスで実装されていることを前提とします。 廃棄タイミングは GC処理時 または using(var a){} ブロックを抜ける時 または Dispose() を呼んだときです。 Inheritance Object PInvokeDisposable Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public abstract class PInvokeDisposable : IDisposable Constructors PInvokeDisposable(IntPtr) Declaration public PInvokeDisposable(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Methods Dispose() Declaration public void Dispose() DisposeNative() Declaration protected abstract void DisposeNative() Finalize() Declaration protected void Finalize()"
  },
  "api/PLATEAU.Interop.PlateauVector2f.html": {
    "href": "api/PLATEAU.Interop.PlateauVector2f.html",
    "title": "Struct PlateauVector2f | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector2f Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public struct PlateauVector2f Constructors PlateauVector2f(Single, Single) Declaration public PlateauVector2f(float x, float y) Parameters Type Name Description Single x Single y Fields X Declaration public float X Field Value Type Description Single Y Declaration public float Y Field Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Interop.PlateauVector3d.html": {
    "href": "api/PLATEAU.Interop.PlateauVector3d.html",
    "title": "Struct PlateauVector3d | PLATEAU SDK for Unity",
    "keywords": "Struct PlateauVector3d Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Interop Assembly : cs.temp.dll.dll Syntax public struct PlateauVector3d Constructors PlateauVector3d(Double, Double, Double) Declaration public PlateauVector3d(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Fields X Declaration public double X Field Value Type Description Double Y Declaration public double Y Field Value Type Description Double Z Declaration public double Z Field Value Type Description Double Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.IO.CoordinateSystem.html": {
    "href": "api/PLATEAU.IO.CoordinateSystem.html",
    "title": "Enum CoordinateSystem | PLATEAU SDK for Unity",
    "keywords": "Enum CoordinateSystem 各列挙子について、3つのアルファベットはXYZ軸がどの方角、方向になるかを表しています。 N,S,E,Wはそれぞれ北,南,東,西 U,Dはそれぞれ上,下 に対応します。 Namespace : PLATEAU.IO Assembly : cs.temp.dll.dll Syntax public enum CoordinateSystem Fields Name Description ENU PLATEAUでの座標系 EUN Unityでの座標系 NWU Unreal Engineでの座標系 WUN"
  },
  "api/PLATEAU.IO.html": {
    "href": "api/PLATEAU.IO.html",
    "title": "Namespace PLATEAU.IO | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.IO Classes MeshConverter GMLファイルをメッシュファイルに変換する機能を提供します。 MeshConvertOptions 都市モデルからメッシュへ変換するためのオプションです。 PrimaryCityObjectTypes 都市モデル内の地物について「主要である」かどうかを判断するための静的メソッドを提供します。 LOD2,3の細分化された地物ではない地物は全て「主要である」とみなされます。 Enums CoordinateSystem 各列挙子について、3つのアルファベットはXYZ軸がどの方角、方向になるかを表しています。 N,S,E,Wはそれぞれ北,南,東,西 U,Dはそれぞれ上,下 に対応します。 MeshGranularity メッシュの結合単位"
  },
  "api/PLATEAU.IO.MeshConverter.html": {
    "href": "api/PLATEAU.IO.MeshConverter.html",
    "title": "Class MeshConverter | PLATEAU SDK for Unity",
    "keywords": "Class MeshConverter GMLファイルをメッシュファイルに変換する機能を提供します。 Inheritance Object MeshConverter Namespace : PLATEAU.IO Assembly : cs.temp.dll.dll Syntax public class MeshConverter : IDisposable Constructors MeshConverter() MeshConverter クラスのインスタンスを初期化します。 Declaration public MeshConverter() Properties Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr Options メッシュ変換オプションを取得または設定します。 Declaration public MeshConvertOptions Options { get; set; } Property Value Type Description MeshConvertOptions Methods Convert(String, String, CityModel, DllLogger) GMLファイルをメッシュファイルに変換します。 変換後のメッシュファイル(OBJもしくはglTF)は destinationDirectory に LOD{LODの値}_{gmlファイル名}.{拡張子} という名前で格納され、 .gmlから参照されるテクスチャファイル一式は destinationDirectory にコピーされます。 cityModel は以下を満たしている必要があります。 オプションがtrueでパースされていること gmlPath がパースされた都市モデルであること Declaration public string[] Convert(string destinationDirectory, string gmlPath, CityModel cityModel = null, DllLogger logger = null) Parameters Type Name Description String destinationDirectory 出力先ディレクトリ String gmlPath 入力GMLファイル CityModel cityModel gmlPath がパースされた都市モデル。nullの場合は内部でパースされます。 DllLogger logger 内部ログ受け取り用の インスタンス Returns Type Description String [] Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize()"
  },
  "api/PLATEAU.IO.MeshConvertOptions.html": {
    "href": "api/PLATEAU.IO.MeshConvertOptions.html",
    "title": "Class MeshConvertOptions | PLATEAU SDK for Unity",
    "keywords": "Class MeshConvertOptions 都市モデルからメッシュへ変換するためのオプションです。 Inheritance Object MeshConvertOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.IO Assembly : cs.temp.dll.dll Syntax public class MeshConvertOptions Constructors MeshConvertOptions() Declaration public MeshConvertOptions() Properties CoordinateZoneID 日本における平面直角座標系の基準点の番号です。 国土地理院のサイト を参照してください。 Declaration public int CoordinateZoneID { get; set; } Property Value Type Description Int32 ExportAppearance テクスチャ、マテリアル情報を出力するかどうかを指定します。 Declaration public bool ExportAppearance { get; set; } Property Value Type Description Boolean ExportLowerLOD 1つの地物について複数のLODがある場合に最大LOD以外のジオメトリを出力するかどうかを指定します。 Declaration public bool ExportLowerLOD { get; set; } Property Value Type Description Boolean MaxLOD 出力後のメッシュに含める最大のLODを指定します。 Declaration public uint MaxLOD { get; set; } Property Value Type Description UInt32 MeshAxes 出力後のメッシュの座標系を指定します。 Declaration public CoordinateSystem MeshAxes { get; set; } Property Value Type Description CoordinateSystem MeshFileFormat Declaration public MeshFileFormat MeshFileFormat { get; set; } Property Value Type Description MeshFileFormat MeshGranularity 出力後のメッシュの粒度(結合単位)を指定します。 Declaration public MeshGranularity MeshGranularity { get; set; } Property Value Type Description MeshGranularity MinLOD 出力後のメッシュに含める最小のLODを指定します。 Declaration public uint MinLOD { get; set; } Property Value Type Description UInt32 ReferencePoint 変換時の基準点を指定します。 基準点は平面直角座標であり、メッシュは基準点からの相対座標で出力されます。 Declaration public PlateauVector3d ReferencePoint { get; set; } Property Value Type Description PlateauVector3d UnitScale メートル法基準での単位の倍率を指定します。 Declaration public float UnitScale { get; set; } Property Value Type Description Single Methods SetValidReferencePoint(CityModel) Declaration public void SetValidReferencePoint(CityModel cityModel) Parameters Type Name Description CityModel cityModel"
  },
  "api/PLATEAU.IO.MeshGranularity.html": {
    "href": "api/PLATEAU.IO.MeshGranularity.html",
    "title": "Enum MeshGranularity | PLATEAU SDK for Unity",
    "keywords": "Enum MeshGranularity メッシュの結合単位 Namespace : PLATEAU.IO Assembly : cs.temp.dll.dll Syntax public enum MeshGranularity Fields Name Description PerAtomicFeatureObject 最小地物単位(LOD2, LOD3の各部品) PerCityModelArea 都市モデル地域単位(GMLファイル内のすべてを結合) PerPrimaryFeatureObject 主要地物単位(建築物、道路等)"
  },
  "api/PLATEAU.IO.PrimaryCityObjectTypes.html": {
    "href": "api/PLATEAU.IO.PrimaryCityObjectTypes.html",
    "title": "Class PrimaryCityObjectTypes | PLATEAU SDK for Unity",
    "keywords": "Class PrimaryCityObjectTypes 都市モデル内の地物について「主要である」かどうかを判断するための静的メソッドを提供します。 LOD2,3の細分化された地物ではない地物は全て「主要である」とみなされます。 Inheritance Object PrimaryCityObjectTypes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.IO Assembly : cs.temp.dll.dll Syntax public static class PrimaryCityObjectTypes Fields PrimaryTypeMask 主要な都市オブジェクトタイプのマスク Declaration public const CityObjectType PrimaryTypeMask = null Field Value Type Description CityObjectType Methods IsPrimary(CityObjectType) 都市オブジェクトタイプが主要であるかどうかを取得します。 Declaration public static bool IsPrimary(CityObjectType type) Parameters Type Name Description CityObjectType type 都市オブジェクトタイプ Returns Type Description Boolean 主要である場合true, そうでなければfalse"
  },
  "api/PLATEAU.PolygonMesh.html": {
    "href": "api/PLATEAU.PolygonMesh.html",
    "title": "Namespace PLATEAU.PolygonMesh | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.PolygonMesh Classes Mesh メッシュ情報です。 Unity や Unreal Engine でメッシュを生成するために必要な情報が含まれるよう意図されています。 具体的には 頂点リスト、Indicesリスト、UV、サブメッシュ（含テクスチャ）があります。 詳しくは Model クラスのコメントをご覧ください。 MeshExtractor から Model を抽出します。 Model DLL側で実装された Model を、C# 側の Model としてデータを受け取るためのクラスです。 ( Node , Mesh , SubMesh も同様です。) Model は、GMLファイルパーサーから読み取った3Dメッシュ情報を各ゲームエンジンに渡すための中間データ構造として設計されています。 そのデータにはメッシュ、テクスチャパス、ゲームオブジェクトの階層構造が含まれており、 DLLの利用者である Unity や Unreal Engine がメッシュやゲームオブジェクトを生成するために必要な情報が入るよう意図されています。 Model はそのデータ構造の階層のトップに位置します。 Model クラスのデータを元に、実際にメッシュやゲームオブジェクトを生成するのは PLATEAU Unity SDK の責務となります。 中間データ構造の階層 : Model -> 所有(0個以上) -> Node(階層構造) -> 所有(0or1個) -> Mesh -> 所有(1個以上) -> SubMesh Model が所有する Node の階層関係は、ゲームエンジン側でのゲームオブジェクトの階層関係に対応します。 Node が所有する Mesh は、そのゲームオブジェクトが保持する3Dメッシュに対応します。 Mesh が所有する SubMesh は、そのメッシュのサブメッシュ（テクスチャパスを含む）に対応します。 DLLから得た Model を delete するのは C# 側の責務なので、 IDisposable を実装して不要時に delete しています。 delete 後は、配下のノードやメッシュにもアクセスできなくなります。 Node Model 以下の階層構造を構成するノードです。 Node は 0個以上の 子Node を持つため階層構造になります。 詳しくは Model クラスのコメントをご覧ください。 Name はゲームエンジン側ではゲームオブジェクトの名前として解釈されることが想定されます。 Mesh はそのゲームオブジェクトの持つメッシュとして解釈されることが想定されます。 SubMesh SubMesh は、 Mesh の一部 (Indices リストの中のとある範囲)がとあるテクスチャであることを表現します。 詳しくは Model クラスのコメントをご覧ください。"
  },
  "api/PLATEAU.PolygonMesh.Mesh.html": {
    "href": "api/PLATEAU.PolygonMesh.Mesh.html",
    "title": "Class Mesh | PLATEAU SDK for Unity",
    "keywords": "Class Mesh メッシュ情報です。 Unity や Unreal Engine でメッシュを生成するために必要な情報が含まれるよう意図されています。 具体的には 頂点リスト、Indicesリスト、UV、サブメッシュ（含テクスチャ）があります。 詳しくは Model クラスのコメントをご覧ください。 Inheritance Object Mesh Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Mesh Properties IndicesCount Declaration public int IndicesCount { get; } Property Value Type Description Int32 SubMeshCount Declaration public int SubMeshCount { get; } Property Value Type Description Int32 VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description Int32 Methods GetIndiceAt(Int32) Declaration public int GetIndiceAt(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 GetSubMeshAt(Int32) Declaration public SubMesh GetSubMeshAt(int index) Parameters Type Name Description Int32 index Returns Type Description SubMesh GetUv1() Declaration public PlateauVector2f[] GetUv1() Returns Type Description PlateauVector2f [] GetUv2() Declaration public PlateauVector2f[] GetUv2() Returns Type Description PlateauVector2f [] GetUv3() Declaration public PlateauVector2f[] GetUv3() Returns Type Description PlateauVector2f [] GetVertexAt(Int32) Declaration public PlateauVector3d GetVertexAt(int index) Parameters Type Name Description Int32 index Returns Type Description PlateauVector3d"
  },
  "api/PLATEAU.PolygonMesh.MeshExtractor.html": {
    "href": "api/PLATEAU.PolygonMesh.MeshExtractor.html",
    "title": "Class MeshExtractor | PLATEAU SDK for Unity",
    "keywords": "Class MeshExtractor から Model を抽出します。 Inheritance Object MeshExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public static class MeshExtractor Methods Extract(ref Model, CityModel, MeshExtractOptions) から Model を抽出します。 結果は outModel に格納されます。 通常、 outModel には new したばかりの Model を渡してください。 Declaration public static void Extract(ref Model outModel, CityModel cityModel, MeshExtractOptions options) Parameters Type Name Description Model outModel CityModel cityModel MeshExtractOptions options"
  },
  "api/PLATEAU.PolygonMesh.Model.html": {
    "href": "api/PLATEAU.PolygonMesh.Model.html",
    "title": "Class Model | PLATEAU SDK for Unity",
    "keywords": "Class Model DLL側で実装された Model を、C# 側の Model としてデータを受け取るためのクラスです。 ( Node , Mesh , SubMesh も同様です。) Model は、GMLファイルパーサーから読み取った3Dメッシュ情報を各ゲームエンジンに渡すための中間データ構造として設計されています。 そのデータにはメッシュ、テクスチャパス、ゲームオブジェクトの階層構造が含まれており、 DLLの利用者である Unity や Unreal Engine がメッシュやゲームオブジェクトを生成するために必要な情報が入るよう意図されています。 Model はそのデータ構造の階層のトップに位置します。 Model クラスのデータを元に、実際にメッシュやゲームオブジェクトを生成するのは PLATEAU Unity SDK の責務となります。 中間データ構造の階層 : Model -> 所有(0個以上) -> Node(階層構造) -> 所有(0or1個) -> Mesh -> 所有(1個以上) -> SubMesh Model が所有する Node の階層関係は、ゲームエンジン側でのゲームオブジェクトの階層関係に対応します。 Node が所有する Mesh は、そのゲームオブジェクトが保持する3Dメッシュに対応します。 Mesh が所有する SubMesh は、そのメッシュのサブメッシュ（テクスチャパスを含む）に対応します。 DLLから得た Model を delete するのは C# 側の責務なので、 IDisposable を実装して不要時に delete しています。 delete 後は、配下のノードやメッシュにもアクセスできなくなります。 Inheritance Object Model Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Model : IDisposable Constructors Model() Declaration public Model() Model(IntPtr) Declaration public Model(IntPtr handle) Parameters Type Name Description IntPtr handle Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr RootNodesCount Model の持つ ルート Node の数を返します。 Declaration public int RootNodesCount { get; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() GetRootNodeAt(Int32) index 番目の Node を返します。 Declaration public Node GetRootNodeAt(int index) Parameters Type Name Description Int32 index Returns Type Description Node"
  },
  "api/PLATEAU.PolygonMesh.Node.html": {
    "href": "api/PLATEAU.PolygonMesh.Node.html",
    "title": "Class Node | PLATEAU SDK for Unity",
    "keywords": "Class Node Model 以下の階層構造を構成するノードです。 Node は 0個以上の 子Node を持つため階層構造になります。 詳しくは Model クラスのコメントをご覧ください。 Name はゲームエンジン側ではゲームオブジェクトの名前として解釈されることが想定されます。 Mesh はそのゲームオブジェクトの持つメッシュとして解釈されることが想定されます。 Inheritance Object Node Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class Node Constructors Node(IntPtr) Declaration public Node(IntPtr handle) Parameters Type Name Description IntPtr handle Properties ChildCount 子ノードの数を返します。 Declaration public int ChildCount { get; } Property Value Type Description Int32 Mesh ノードが保有する Mesh を返します。 なければ null を返します。 Declaration public Mesh Mesh { get; } Property Value Type Description Mesh Name ノードの名称を返します。 ゲームエンジン側ではゲームオブジェクトの名称となります。 Declaration public string Name { get; } Property Value Type Description String Methods GetChildAt(Int32) index 番目の子ノードを返します。 Declaration public Node GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description Node"
  },
  "api/PLATEAU.PolygonMesh.SubMesh.html": {
    "href": "api/PLATEAU.PolygonMesh.SubMesh.html",
    "title": "Class SubMesh | PLATEAU SDK for Unity",
    "keywords": "Class SubMesh SubMesh は、 Mesh の一部 (Indices リストの中のとある範囲)がとあるテクスチャであることを表現します。 詳しくは Model クラスのコメントをご覧ください。 Inheritance Object SubMesh Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.PolygonMesh Assembly : cs.temp.dll.dll Syntax public class SubMesh Constructors SubMesh(IntPtr) Declaration public SubMesh(IntPtr handle) Parameters Type Name Description IntPtr handle Properties EndIndex Declaration public int EndIndex { get; } Property Value Type Description Int32 StartIndex Declaration public int StartIndex { get; } Property Value Type Description Int32 TexturePath Declaration public string TexturePath { get; } Property Value Type Description String"
  },
  "api/PLATEAU.Udx.CityModelPackageInfo.html": {
    "href": "api/PLATEAU.Udx.CityModelPackageInfo.html",
    "title": "Class CityModelPackageInfo | PLATEAU SDK for Unity",
    "keywords": "Class CityModelPackageInfo 都市モデルインポート時のパッケージごとの設定です。 Inheritance Object CityModelPackageInfo Namespace : PLATEAU.Udx Assembly : cs.temp.dll.dll Syntax public class CityModelPackageInfo : PInvokeDisposable Constructors CityModelPackageInfo(IntPtr) Declaration public CityModelPackageInfo(IntPtr handle) Parameters Type Name Description IntPtr handle Properties HasAppearance Declaration public bool HasAppearance { get; } Property Value Type Description Boolean MaxLOD Declaration public int MaxLOD { get; } Property Value Type Description Int32 MinLOD Declaration public int MinLOD { get; } Property Value Type Description Int32 Methods Create(Boolean, Int32, Int32) Declaration public static CityModelPackageInfo Create(bool hasAppearance, int minLOD, int maxLOD) Parameters Type Name Description Boolean hasAppearance Int32 minLOD Int32 maxLOD Returns Type Description CityModelPackageInfo DisposeNative() Declaration protected override void DisposeNative() GetPredefined(PredefinedCityModelPackage) 与えられたパッケージ種別に対して、仕様上存在する可能性のあるLODの範囲と、仕様上テクスチャが存在する可能性があるかをタプルで返します。 Declaration public static (bool hasAppearance, int minLOD, int maxLOD) GetPredefined(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description (T1, T2, T3) < Boolean , Int32 , Int32 >"
  },
  "api/PLATEAU.Udx.GmlFileInfo.html": {
    "href": "api/PLATEAU.Udx.GmlFileInfo.html",
    "title": "Class GmlFileInfo | PLATEAU SDK for Unity",
    "keywords": "Class GmlFileInfo Inheritance Object GmlFileInfo Namespace : PLATEAU.Udx Assembly : cs.temp.dll.dll Syntax public class GmlFileInfo : PInvokeDisposable Constructors GmlFileInfo(IntPtr) Declaration public GmlFileInfo(IntPtr handle) Parameters Type Name Description IntPtr handle Properties FeatureType Declaration public string FeatureType { get; } Property Value Type Description String Package Declaration public PredefinedCityModelPackage Package { get; } Property Value Type Description PredefinedCityModelPackage Path Declaration public string Path { get; } Property Value Type Description String Methods Create(String) Declaration public static GmlFileInfo Create(string path) Parameters Type Name Description String path Returns Type Description GmlFileInfo DisposeNative() Declaration protected override void DisposeNative()"
  },
  "api/PLATEAU.Udx.html": {
    "href": "api/PLATEAU.Udx.html",
    "title": "Namespace PLATEAU.Udx | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Udx Classes CityModelPackageInfo 都市モデルインポート時のパッケージごとの設定です。 GmlFileInfo PredefinedCityModelPackageExtension UdxFileCollection PLATEAUのデータファイルから、GMLファイル群を検索し、結果を保持します。 条件によりGMLファイルを絞り込む機能と、GMLと関連ファイルをコピーする機能があります。 Structs MeshCode Enums PredefinedCityModelPackage"
  },
  "api/PLATEAU.Udx.MeshCode.html": {
    "href": "api/PLATEAU.Udx.MeshCode.html",
    "title": "Struct MeshCode | PLATEAU SDK for Unity",
    "keywords": "Struct MeshCode Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : PLATEAU.Udx Assembly : cs.temp.dll.dll Syntax public struct MeshCode Fields FirstCol Declaration public int FirstCol Field Value Type Description Int32 FirstRow Declaration public int FirstRow Field Value Type Description Int32 Level Declaration public int Level Field Value Type Description Int32 SecondCol Declaration public int SecondCol Field Value Type Description Int32 SecondRow Declaration public int SecondRow Field Value Type Description Int32 ThirdCol Declaration public int ThirdCol Field Value Type Description Int32 ThirdRow Declaration public int ThirdRow Field Value Type Description Int32 Properties Extent Declaration public readonly Extent Extent { get; } Property Value Type Description Extent Methods Parse(String) Declaration public static MeshCode Parse(string code) Parameters Type Name Description String code Returns Type Description MeshCode ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/PLATEAU.Udx.PredefinedCityModelPackage.html": {
    "href": "api/PLATEAU.Udx.PredefinedCityModelPackage.html",
    "title": "Enum PredefinedCityModelPackage | PLATEAU SDK for Unity",
    "keywords": "Enum PredefinedCityModelPackage Namespace : PLATEAU.Udx Assembly : cs.temp.dll.dll Syntax public enum PredefinedCityModelPackage : uint Fields Name Description Building CityFurniture DisasterRisk LandUse None Relief Road Unknown UrbanPlanningDecision Vegetation"
  },
  "api/PLATEAU.Udx.PredefinedCityModelPackageExtension.html": {
    "href": "api/PLATEAU.Udx.PredefinedCityModelPackageExtension.html",
    "title": "Class PredefinedCityModelPackageExtension | PLATEAU SDK for Unity",
    "keywords": "Class PredefinedCityModelPackageExtension Inheritance Object PredefinedCityModelPackageExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Udx Assembly : cs.temp.dll.dll Syntax public static class PredefinedCityModelPackageExtension Methods ToJapaneseName(PredefinedCityModelPackage) Declaration public static string ToJapaneseName(this PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description String"
  },
  "api/PLATEAU.Udx.UdxFileCollection.html": {
    "href": "api/PLATEAU.Udx.UdxFileCollection.html",
    "title": "Class UdxFileCollection | PLATEAU SDK for Unity",
    "keywords": "Class UdxFileCollection PLATEAUのデータファイルから、GMLファイル群を検索し、結果を保持します。 条件によりGMLファイルを絞り込む機能と、GMLと関連ファイルをコピーする機能があります。 Inheritance Object UdxFileCollection Namespace : PLATEAU.Udx Assembly : cs.temp.dll.dll Syntax public class UdxFileCollection : IDisposable Constructors UdxFileCollection() Declaration public UdxFileCollection() Properties Handle セーフハンドルを取得します。 Declaration public IntPtr Handle { get; } Property Value Type Description IntPtr MeshCodes Declaration public ReadOnlyCollection<MeshCode> MeshCodes { get; } Property Value Type Description ReadOnlyCollection < MeshCode > Packages Declaration public PredefinedCityModelPackage Packages { get; } Property Value Type Description PredefinedCityModelPackage Methods CalcCenterPoint(GeoReference) Declaration public PlateauVector3d CalcCenterPoint(GeoReference geoReference) Parameters Type Name Description GeoReference geoReference Returns Type Description PlateauVector3d Dispose() Declaration public void Dispose() Fetch(String, GmlFileInfo) GMLファイルとその関連ファイルをコピーします。 関連ファイルを探すために、GMLファイルの中身に対して文字列検索（テクスチャパスなどの記載を探す）が行われるため、 GMLファイルの容量が増えるほど処理時間が増えます。 Declaration public void Fetch(string destinationRootPath, GmlFileInfo gmlFileInfo) Parameters Type Name Description String destinationRootPath コピー先のルートフォルダのパスです。 GmlFileInfo gmlFileInfo コピー元のGMLファイルの GmlFileInfo です。 Filter(Extent) GMLファイルを街の緯度・経度・高さによって絞り込みます。 Declaration public UdxFileCollection Filter(Extent extent) Parameters Type Name Description Extent extent Returns Type Description UdxFileCollection FilterByMeshCodes(MeshCode[]) GMLファイルを地域ID(メッシュコード)によって絞り込みます。 Declaration public UdxFileCollection FilterByMeshCodes(MeshCode[] meshCodeArray) Parameters Type Name Description MeshCode [] meshCodeArray Returns Type Description UdxFileCollection Finalize() Declaration protected void Finalize() Find(String) GMLファイルを検索し、結果を保持します。 Declaration public static UdxFileCollection Find(string source) Parameters Type Name Description String source 検索元のルートフォルダのパスです。 Returns Type Description UdxFileCollection GetGmlFiles(PredefinedCityModelPackage) GMLファイルのうち、引数で与えられたパッケージ種に該当するもののパスを string の配列で返します。 Declaration public string[] GetGmlFiles(PredefinedCityModelPackage package) Parameters Type Name Description PredefinedCityModelPackage package Returns Type Description String []"
  },
  "api/PLATEAU.Util.Async.html": {
    "href": "api/PLATEAU.Util.Async.html",
    "title": "Namespace PLATEAU.Util.Async | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Util.Async Classes TaskExtension TextureLoader URLから画像をロードしてテクスチャとして返します。"
  },
  "api/PLATEAU.Util.Async.TaskExtension.html": {
    "href": "api/PLATEAU.Util.Async.TaskExtension.html",
    "title": "Class TaskExtension | PLATEAU SDK for Unity",
    "keywords": "Class TaskExtension Inheritance Object TaskExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util.Async Assembly : cs.temp.dll.dll Syntax public static class TaskExtension Methods ContinueWithErrorCatch(Task) Declaration public static Task ContinueWithErrorCatch(this Task task) Parameters Type Name Description Task task Returns Type Description Task"
  },
  "api/PLATEAU.Util.Async.TextureLoader.html": {
    "href": "api/PLATEAU.Util.Async.TextureLoader.html",
    "title": "Class TextureLoader | PLATEAU SDK for Unity",
    "keywords": "Class TextureLoader URLから画像をロードしてテクスチャとして返します。 Inheritance Object TextureLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util.Async Assembly : cs.temp.dll.dll Syntax public static class TextureLoader Methods LoadAsync(String, Int32) 非同期で url から画像をダウンロードしてテクスチャとして返します。 コルーチンを使うので、メインスレッドで行われる必要があります。 失敗した場合は null を返します。 Declaration public static async Task<Texture> LoadAsync(string url, int timeOutSec) Parameters Type Name Description String url Int32 timeOutSec Returns Type Description Task < Texture >"
  },
  "api/PLATEAU.Util.DebugUtil.html": {
    "href": "api/PLATEAU.Util.DebugUtil.html",
    "title": "Class DebugUtil | PLATEAU SDK for Unity",
    "keywords": "Class DebugUtil Inheritance Object DebugUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class DebugUtil Methods EnumerableToString<T>(IEnumerable<T>) 複数オブジェクトの ToString をまとめて行い、結合した string を返します。 Declaration public static string EnumerableToString<T>(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description String Type Parameters Name Description T"
  },
  "api/PLATEAU.Util.EnumUtil.html": {
    "href": "api/PLATEAU.Util.EnumUtil.html",
    "title": "Class EnumUtil | PLATEAU SDK for Unity",
    "keywords": "Class EnumUtil Inheritance Object EnumUtil Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public static class EnumUtil Methods EachFlags<TEnum>(TEnum) フラグ式のEnumを受け取り、そのフラグが立っている各Enumタイプに分解します。 Declaration public static IEnumerable<TEnum> EachFlags<TEnum>(TEnum input) where TEnum : Enum Parameters Type Name Description TEnum input Returns Type Description IEnumerable <TEnum> Type Parameters Name Description TEnum"
  },
  "api/PLATEAU.Util.html": {
    "href": "api/PLATEAU.Util.html",
    "title": "Namespace PLATEAU.Util | PLATEAU SDK for Unity",
    "keywords": "Namespace PLATEAU.Util Classes DebugUtil EnumUtil Interfaces IProgressDisplay"
  },
  "api/PLATEAU.Util.IProgressDisplay.html": {
    "href": "api/PLATEAU.Util.IProgressDisplay.html",
    "title": "Interface IProgressDisplay | PLATEAU SDK for Unity",
    "keywords": "Interface IProgressDisplay Namespace : PLATEAU.Util Assembly : cs.temp.dll.dll Syntax public interface IProgressDisplay Methods SetProgress(String, Single, String) Declaration void SetProgress(string progressName, float percentage, string message) Parameters Type Name Description String progressName Single percentage String message"
  },
  "index.html": {
    "href": "index.html",
    "title": "PLATEAU SDK for Unity | PLATEAU SDK for Unity",
    "keywords": "PLATEAU SDK for Unity このパッケージには、 PLATEAU の3D都市モデルデータを利用するためのAPI、サンプルが含まれます。PLATEAU SDK for Unityを利用することで、実世界を舞台にしたゲームの開発や、PLATEAUの豊富なデータを活用したシミュレーションを簡単に行うことができます。"
  },
  "manual/AccessCityObject.html": {
    "href": "manual/AccessCityObject.html",
    "title": "都市情報へのアクセス | PLATEAU SDK for Unity",
    "keywords": "都市情報へのアクセス C#プログラムによって都市情報にアクセスする手順は、おおまかには次のとおりです。 GameObject から CityObject を取得 CityObject から 属性(AttributesMap) を取得 属性から値を取得 以下で詳しく解説します。 まずサンプルを提示し、次に都市情報を取得するために知っておくべきことを解説します。 サンプル シーンに配置された都市の3Dモデルから、都市情報の1つである属性を取得できます。 そのサンプルとして、 PlateauLogAttributes シーンをご覧ください。 シーンを開いてPlayボタンを押すと、建物の情報がUnityコンソールに表示されます。 そのコードのサンプルが PlateauAttributesLogger.cs になります。 属性とは 取得できる都市情報の1つに「属性」があります。 属性は例えば (String) 大字・町コード => 42, (String) 防火及び準防火地域 => 準防火地域 のように、キーと値のペアからなる辞書形式の情報です。 属性の値は文字列型として取得できるか、または 子の属性（属性は入れ子になることもあります）として取得できるかのいずれかです。 属性が入れ子になっている例は次のとおりです（サンプルシーンの実行結果から抜粋）。 (AttributeSet) 多摩水系多摩川、浅川、大栗川洪水浸水想定区域（想定最大規模） => [ { (String) 浸水ランク => 2 } { (Measure) 浸水深 => 0.990 } { (Measure) 継続時間 => 0.68 } { (String) 規模 => L2 } ]} 上の例において、(括弧)内の文字は属性の型を示します。 属性は次の型があります: AttributeSet, String, Double, Integer, Data, Uri, Measure AttributeSet以外の型はすべて内部的には文字列型であり、 attributeValue.AsString で値を取得できます。 入れ子AttributeSetの値は AsString では取得できず、 attributeValue.AsAttrSet で取得できます。 属性の取得 シーンの GameObject から都市情報の属性を取得する方法については サンプルの PlateauAttributesLogger.cs が例になります。 その補足として、方法の概要を以下に記します。 シーンのヒエラルキー PlateauデータをUnityにインポートすると、 サンプルシーンにあるとおり、次の階層構造でオブジェクトが配置されます。 都市モデルルート( CityBehaviour がアタッチされます ) → 子 : 3Dモデルファイルのインスタンス ( プレハブとして配置されます ) → 子 : CityObject に対応する GameObject すなわち、 CityBehaviour の孫にあたる GameObject が CityObject と対応します。 CityObject の取得 GameObject の名称から CityObject を取得するには次のようにします。 var cityObj = cityBehaviour.LoadCityObject(gameObj.name); そうすると CityBehaviour は自身の参照するメタデータを利用し、 GameObjectの名称からどの gml ファイルをロードするべきか検索します。 そして gmlファイルから CityModel ロードして（ロード済みの場合はキャッシュが使われます）、 CityModel のうち 該当する CityObject を返します。 補足: ここで利用するメタデータとは、 インポート時に生成される CityMetaData型の Scriptable Object です。 CityMetaDataは、インポート時に GameObject名と gmlファイル名の対応表を記録します。 CityObject の属性の取得 CityObject から属性を取得するには、 cityObject.AttributesMap を利用します。 属性については上述の通りです。"
  },
  "manual/ImportCityModels.html": {
    "href": "manual/ImportCityModels.html",
    "title": "都市モデルのインポート | PLATEAU SDK for Unity",
    "keywords": "都市モデルのインポート このページでは、都市データをUnityプロジェクトにインポートする手順を説明します。 準備 PlateauSDK を導入したUnityプロジェクトを用意します。 SDKの導入方法は インストール を参照してください。 インポート手順 インポート元の選択 Unityのメニューバーから PLATEAU → PLATEAU SDK ウィンドウ を選択します。 表示されるウィンドウの上部に3つのタブ「インポート、モデル調整、エクスポート」があります。 このうちインポートを選択します。 インポート先がローカルかサーバーかを選択します。 導入したい都市データが自分のコンピュータにある場合はローカルを選択します。 なお、都市データは国交省のPLATEAU Webサイトからダウンロードできます。 参照 ボタンを押します。都市データのフォルダの選択画面が表示されます。 都市データのフォルダの中には、 udx , codelists という名前のフォルダがあるはずです。 udx の 1つ上 のフォルダを選択します。 サーバー では、ローカルの代わりにPLATEAUのデータサーバーから都市データをインポートできます。 この機能は未実装です。 基準座標系の選択 リストのうち、都市が属する場所として近いものを選択します。 適切なものを選ぶと座標の誤差が小さくなります。 ここで選択する座標系は国土交通省が定める平面直角座標系に準拠しています。 詳しくは 国土地理院のWebサイト「わかりやすい平面直角座標系」 をご覧ください。 インポート範囲の選択 範囲選択 ボタンを押します。 現在のUnityシーンに変更がある場合、変更を保存するかどうかを尋ねるダイアログが表示されます。 Save または Don't Save をクリックします。 シーンビューの表示が切り替わり、利用可能な範囲の一覧が緑色の線で表示されます。 地図の全体像がうまく表示されない場合は次の操作を試してください: マウスホイールを上下に回してズームアウト、ズームイン マウスホイールを押し込んだままドラッグしてカメラ移動 右マウスボタンを押したままドラッグで向き変更 青色の球体をドラッグして範囲を選択します。 シーンビュー左上の 決定 ボタンを押します。すると元のシーンに戻ります。 範囲選択が完了すると、 範囲選択 ボタンの下に 範囲選択:セット済 という表示がなされ、 その下に 地物別設定 が表示されるようになります。 補足 : 地域の区分を確認したい時は、ローカルにダウンロードしたフォルダに付属している indexmap という名前のpdfファイルをご覧ください。 下図のように地図上に区分が記載されています。 地物別設定 地物の種類ごとにインポートに関する設定を行います。 設定項目について: インポートする チェックが付いている地物タイプのみインポートします。 テクスチャを含める テクスチャが存在する地物タイプで表示される設定項目です。 チェックが付いていて、かつテクスチャがある場合はそれを含めてインポートします。 都市データによってはテクスチャがない場合があり、 その場合はチェックを外した時と同様に真っ白な3Dモデルが出力されます。 LOD範囲設定 複数のLODを利用可能な地物タイプで表示される設定項目です。 バーの左端と右端をドラッグして、利用するLODの範囲を指定できます。 Note LODとは gmlファイルの中には、都市モデルの形状の細かさを指定したいという需要に対応するため、 複数の形状データが格納されている場合があります。 LOD0がもっとも大雑把な形状で、LOD1, LOD2 と数字が上がるほど細かい形状になります。 建築物の場合、LOD0 は平面、LOD1は平面に一定の高さを付けたもの、LOD2はより細かい形状です。 メッシュ結合単位 主要地物単位 メッシュは建物ごとに分かれて出力されます。 建物ごとに地物データを取得できるようにしたい場合はこちらを選択します。 最小地物単位 屋根、壁単位など非常に細かくオブジェクトを分けたい場合はこちらを選択します。 都市モデル地域単位 メッシュは結合されて出力されます。 オブジェクト数を削減して軽量化できますが、建物ごとの地物データは取得不可になります。 メッシュの結合はある程度の大きさの範囲ごとに行われます。 Note 地物の選択について 地物の中にはインポートに時間がかかるものもあるのでご注意ください。 例えば 土地起伏 はデータの範囲が 10km × 10km と非常に広く、 データ容量が重く処理に時間がかかるのでご注意ください。 インポートの実行 インポート ボタンを押します。 計算状況 ウィンドウが現れ、インポート処理の進捗が表示されます。 処理が進むと、都市のオブジェクトが順次シーンに配置されていきます。 計算状況ウィンドウがすべて「完了」になったらインポート終了です。 Note インポート元となる都市データは Assets/StreamingAssets/.PLATEAU にコピーされます。 .PLATEAU は隠しフォルダである点にご注意ください。Unityのインポート処理を削減する目的でこうなっています。 なお、インポート対象として選択したものに関連するもののみがコピーされます。 エラーログの確認 インポートの結果、計算状況ウィンドウの内容がすべて「完了」となれば良いですが、 ロードできなかったgmlファイルに関しては「失敗」と表示されます。 そのような場合でも、一部のgmlファイルのロードが成功していれば、そのgmlに関しては正常にインポートされています。 失敗の場合は Unityのコンソールにエラーログが出力されます。"
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "インストール | PLATEAU SDK for Unity",
    "keywords": "インストール 対応Unityバージョンのインストール PLATEAU Unity SDK は、Unityバージョン 2020.3 を想定しています。 そのバージョンがインストールされていない場合は、次の手順でインストールしてください。 Unity Hub をこちらからインストールします 。 Unity Hubを起動し、左のサイドバーから インストール → 右上のボタンから インストール をクリックします。 Unity 2020.3 で始まるバージョンを選択し、 次へ を押します。 実行 してインストールします。 Unityプロジェクトの作成 Unity Hub の左サイドバーの プロジェクト を押し、右上の 新規作成 ボタンの右隣にある矢印マークをクリックします。 先ほどインストールしたバージョンを選択して 次へ を押します。 プロジェクト名と保存先を入力し 作成 を押します。 PLATEAU Unity SDK の導入 Unityのメニューバーから Window → Package Manager を選択します。 Package Manager ウィンドウの左上の＋ボタンから Add package from git URL... を選択します。 次のURLを入力して Add を押します。 https://github.com/Synesthesias/PlateauUnitySDK.git ウィンドウのパッケージ一覧に Plateau Unity SDK が表示されたら完了です。"
  },
  "manual/Tutorial.html": {
    "href": "manual/Tutorial.html",
    "title": "チュートリアル | PLATEAU SDK for Unity",
    "keywords": "チュートリアル"
  }
}